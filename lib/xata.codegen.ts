// Generated by Xata Codegen 0.26.9. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "titles",
    columns: [
      { name: "titleType", type: "string" },
      { name: "primaryTitle", type: "string" },
      { name: "originalTitle", type: "string" },
      { name: "isAdult", type: "bool" },
      { name: "startYear", type: "int" },
      { name: "endYear", type: "int" },
      { name: "runtimeMinutes", type: "float" },
      { name: "genres", type: "multiple" },
      { name: "numVotes", type: "int" },
      { name: "averageRating", type: "float" },
      { name: "coverUrl", type: "string" },
      { name: "summary", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Titles = InferredTypes["titles"];
export type TitlesRecord = Titles & XataRecord;

export type DatabaseSchema = {
  titles: TitlesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://sahil-preet-s-workspace-f3ful6.eu-west-1.xata.sh/db/xmdb",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
